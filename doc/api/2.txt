now we need to create your models and roots for our user and for your paths. we also 
this are basically Schema.

The Schema API provides mechanisms to define and enforce structure to the data that is managed by Open Data for Industries.

SO now we have created models for each user, catagory and post.

models are basically the hardcode structure in with this thing will contang data like the posts title will be a string and it is required for every post hence we need to declear that before handin this models.

also we need to add an method at the end of each model called the timestamps
Timestamps save the current time of the document created and also when it was updated in form of a Date by turning it true.

like:
models code of User.js:
const mongoose=require("mongoose");
const UserSchema=new mongoose.Schema({
    username:{
        type: String,
        required:true,
        unique:true
    },
    email:{
        type:String,
        required: true,
        unique:true,
    },
    password:{
        type:String,
        required:true
    },
    profilePic:{
        type:String,
        default:""
    }
},{timestamps:true});

module.exports=mongoose.model("User",UserSchema)

for post.js:
const mongoose=require("mongoose");
const PostSchema=new mongoose.Schema({
    title:{
        type:String,
        require:true,
        unique:true,
    },
    desc:{
        type:String,
        required:false
    },
    photo:{
        type:String,
        required:false
    },
    username:{
        type:String,
        required:true
    },
    categories:{
        type:array,
        required:false
    }

},{timestamps:true});

module.exports=mongoose.model("Post",PostSchema)

for catagory.js:

const mongoose=require("mongoose");
const CatagorySchema=new mongoose.Schema({
    name:{
        type:String,
        required:true
    }

},{timestamps:true});

module.exports=mongoose.model("Catagory",CatagorySchema)